CREATE OR REPLACE package APPS_RENTAL_TOOL_PKG
as
TYPE RENTAL_LIST_CURSOR
IS
  ref
  cursor;

procedure GET_ACTIVE_RENTAL_ORDER_DTLS(IP_ORDER_NUMBER in varchar2,
OP_CUST_AGREEMENT OUT varchar2,
OP_CUST_NAME OUT varchar2,
OP_CONTRACT_EXP_DATE OUT varchar2,
OP_SALES_REP OUT VARCHAR2,
OP_RENTAL_SHIP_TO_DTLS OUT RENTAL_LIST_CURSOR,
OP_RENTAL_BILL_TO_DTLS OUT RENTAL_LIST_CURSOR,
OP_RENTAL_LINES_DTLS OUT RENTAL_LIST_CURSOR,
OP_STATUS_CODE OUT varchar2,
OP_STATUS_MSG OUT VARCHAR2
);

TYPE ORDER_LIST_CURSOR
IS
  ref
  CURSOR;
  
  TYPE ITEM_LIST_CURSOR
IS
  ref
  CURSOR;
    PROCEDURE GET_ORDER_DTLS(
        IP_ORDER_NUMBER IN               VARCHAR2,
--        IP_ORDER_LINE_ID IN VARCHAR2,
        OP_CUST_NAME OUT varchar2,
        OP_CUST_AGREEMENT OUT            VARCHAR2,
        OP_RENTAL_AGREEMENT_END_DATE OUT DATE,
        OP_SALES_REP OUT                 VARCHAR2,
        OP_ORDER_SHIP_TO_DTLS OUT ORDER_LIST_CURSOR,
        OP_ORDER_BILL_TO_DTLS OUT ORDER_LIST_CURSOR,
        OP_RENTAL_LINES_DTLS OUT ORDER_LIST_CURSOR,
        OP_OTHER_ITEMS_DTLS OUT ORDER_LIST_CURSOR,
        OP_STATUS_CODE OUT VARCHAR2,
        OP_STATUS_MSG OUT  VARCHAR2
      );
     
     TYPE WAREHOUSE_LIST_CURSOR
IS
  ref
  CURSOR;
     
      PROCEDURE GET_WAREHOUSE_DTLS(
        OP_WAREHOUSE_DTLS OUT WAREHOUSE_LIST_CURSOR,
        OP_STATUS_CODE OUT varchar2,
        OP_STATUS_MSG OUT VARCHAR2
      ); 
    PROCEDURE GET_ITEM_DTLS(
        --IP_ORDER_LINE_ID IN  OUT    number,
        IP_WAREHOUSE_ID IN number,
        OP_ITEM_DTLS OUT ITEM_LIST_CURSOR,
         OP_STATUS_CODE OUT varchar2,
        OP_STATUS_MSG OUT VARCHAR2
      );
      
       procedure CREATE_RENTAL_ORDERS(
        OP_RENTAL_LINES_LST IN ORDER_HEADER_LINE_DTLS_TAB,
        OP_ORDER_LINE_ID OUT varchar2,
        OP_RESP_CODE OUT varchar2,
        OP_RESP_MSG OUT varchar2
      );
      
      
        procedure UPDATE_RENTAL_ORDER_LINES(
        IP_ITEM_INFO_LST IN ITEM_INFO_DTLS_TAB,
        OP_RESP_CODE OUT varchar2,
        OP_RESP_MSG OUT varchar2
      );

procedure REPLACE_RENTAL_ORDER_ITEMS(
        IP_RENTAL_LINES_LST IN RENTAL_LINES_DTLS_TAB,
        OP_ORDER_LINE_ID OUT varchar2,
        OP_STATUS_CODE OUT varchar2,
        OP_STATUS_MSG OUT VARCHAR2
      );
procedure REPLACE_RENTAL_ORDER_ITEM(
        IP_RENTAL_LINES_LST IN RENTAL_LINES_DTLS_OBJECT,
        OP_ORDER_LINE_ID OUT varchar2,
        OP_STATUS_CODE OUT varchar2,
        OP_STATUS_MSG OUT varchar2
      );
      
TYPE ADDRESS_CUR
IS
  ref
  CURSOR;
  TYPE CUSTOMER_CUR
IS
  REF
  CURSOR;
  TYPE RENTAL_DETAILS_CUR
IS
  REF
  CURSOR;
    PROCEDURE GET_RETURN_DETAILS_DTLS(
        IP_ORDER_NUMBER IN VARCHAR2,
        OP_SALES_REP OUT VARCHAR2,
        OP_OUTSTANDING_DTLS OUT RENTAL_DETAILS_CUR,
        OP_SHIP_TO_DTLS OUT ADDRESS_CUR,
        OP_BILL_TO_DTLS OUT ADDRESS_CUR,
        OP_CUSTOMER_DTLS OUT CUSTOMER_CUR,
        OP_RENTAL_DTLS OUT RENTAL_DETAILS_CUR,
        OP_STATUS_CODE OUT VARCHAR2,
        OP_STATUS_MSG OUT VARCHAR2 );
        
    TYPE RLINE_INFO_LIST_CURSOR
IS
  ref
  CURSOR;
  
  PROCEDURE GET_RENTAL_LINE_DTLS(
         IP_RENTAL_LINE_ID IN  OUT  number,
        RLINE_INFO_DTLS OUT RLINE_INFO_LIST_CURSOR,
        OP_STATUS_CODE OUT VARCHAR2,
        OP_STATUS_MSG OUT VARCHAR2
      );
  procedure UPDATE_RENTAL_LINES(
        IP_RENTAL_LINES_LST IN RENTAL_LINE_DTLS_TAB,
        IP_RENTAL_LINE_ID OUT varchar2,
        OP_RESP_CODE OUT varchar2,
        OP_RESP_MSG OUT varchar2
      );
    procedure BILL_RENTAL_LINES(
        IP_RENTAL_LINE_ID IN varchar2,
        OP_RESP_CODE OUT varchar2,
        OP_RESP_MSG OUT varchar2
      );
END APPS_RENTAL_TOOL_PKG;
/


CREATE OR REPLACE PACKAGE BODY APPS_RENTAL_TOOL_PKG
AS
PROCEDURE GET_ACTIVE_RENTAL_ORDER_DTLS(
    IP_ORDER_NUMBER IN VARCHAR2,
    OP_CUST_AGREEMENT OUT VARCHAR2,
    OP_CUST_NAME OUT varchar2,
    OP_CONTRACT_EXP_DATE OUT VARCHAR2,
    OP_SALES_REP OUT VARCHAR2,
    OP_RENTAL_SHIP_TO_DTLS OUT RENTAL_LIST_CURSOR,
    OP_RENTAL_BILL_TO_DTLS OUT RENTAL_LIST_CURSOR,
    OP_RENTAL_LINES_DTLS OUT RENTAL_LIST_CURSOR,
    OP_STATUS_CODE OUT VARCHAR2,
    OP_STATUS_MSG OUT VARCHAR2 )
IS
BEGIN
  SELECT CUSTOMER.AGREEMENT ,
    NVL(sysdate + CUSTOMER.CONTRACTEXPIREDATE,sysdate) ,
    ORDERHEADER.SALESREP,CUSTOMER.name
  INTO OP_CUST_AGREEMENT ,
    OP_CONTRACT_EXP_DATE ,
    OP_SALES_REP,
    OP_CUST_NAME
  FROM CUSTOMER,
    ORDERHEADER
  WHERE CUSTOMER.id=ORDERHEADER.CUSTOMERID
  AND ORDERNUMBER  =IP_ORDER_NUMBER;
  BEGIN
    OPEN OP_RENTAL_SHIP_TO_DTLS FOR SELECT ADDR.LINE1
  AS
    "ADDRESS_LINE1",
    ADDR.LINE2
  AS
    "ADDRESS_LINE2",
    ADDR.CITY
  AS
    "CITY",
    ADDR.STATE
  AS
    "STATE",
    ADDR.ZIP
  AS
    "ZIP",
    ADDR.COUNTRY
  AS
    "COUNTRY",
    ADDR.USAGE
  AS
    "USAGE_TYPE" FROM ORDERHEADER OH,
    ADDRESS ADDR WHERE OH.ORDERNUMBER=IP_ORDER_NUMBER AND OH.SHIPTOADDRESSID=ADDR.id AND UPPER(USAGE)='SHIPTO';
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF SHIP TO ADDRESS:'||SQLERRM;
  END;
BEGIN
  OPEN OP_RENTAL_BILL_TO_DTLS FOR SELECT ADDR.LINE1
AS
  "ADDRESS_LINE1",
  ADDR.LINE2
AS
  "ADDRESS_LINE2",
  ADDR.CITY
AS
  "CITY",
  ADDR.STATE
AS
  "STATE",
  ADDR.ZIP
AS
  "ZIP",
  ADDR.COUNTRY
AS
  "COUNTRY",
  ADDR.USAGE
AS
  "USAGE_TYPE" FROM ORDERHEADER OH,
  ADDRESS ADDR WHERE OH.ORDERNUMBER=IP_ORDER_NUMBER AND OH.BILLTOADDRESSID=ADDR.id AND UPPER(USAGE)='BILLTO';
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='002';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF BILL TO ADDRESS:'||SQLERRM;
END;
BEGIN
  OPEN OP_RENTAL_LINES_DTLS FOR SELECT oh.id
AS
  "ORDER_HEADER_ID",
  oh.ordernumber
AS
  "ORDER_NUMBER",
  RL.ID
AS
  "RENTAL_LINE_ID",
  RH.ID
AS
  "RENTAL_HEADER_ID",
  ITEMS.ID
AS
  "ITEM_ID",
  IB.ID
AS
  "INSTALL_BASE_ID",
  ITEMS.SKU
AS
  "ITEM_SKU",
  ITEMS.DESCRIPTION
AS
  "ITEM_DESCRIPTION",
  IB.SERIALNUMBER
AS
  "SERIAL_NUMBER" FROM RENTALHEADER RH ,
  RENTALLINES RL ,
  ORDERHEADER OH ,
  ITEMS ,
  InstallBase IB WHERE RH.id=RL.RENTALHEADERID AND RH.ORDERID=OH.id 
  AND OH.ORDERNUMBER=IP_ORDER_NUMBER 
  AND UPPER(RL.STATUS)=UPPER('At Customer')
  AND RL.ITEMID=ITEMS.id AND RL.INSTALLBASEID=IB.ID;
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='002';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF RENTAL LINES DETAILS:'||SQLERRM;
END;
IF OP_STATUS_CODE IS NULL THEN
  OP_STATUS_CODE  :='000';
  OP_STATUS_MSG   := 'SUCCESS';
END IF;
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='001';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL FROM PROCEDURE:'||SQLERRM;
END GET_ACTIVE_RENTAL_ORDER_DTLS;
PROCEDURE GET_ORDER_DTLS(
    IP_ORDER_NUMBER IN VARCHAR2,
    OP_CUST_NAME OUT VARCHAR2,
    --IP_ORDER_LINE_ID in varchar2,
    OP_CUST_AGREEMENT OUT VARCHAR2,
    OP_RENTAL_AGREEMENT_END_DATE OUT DATE,
    OP_SALES_REP OUT VARCHAR2,
    OP_ORDER_SHIP_TO_DTLS OUT ORDER_LIST_CURSOR,
    OP_ORDER_BILL_TO_DTLS OUT ORDER_LIST_CURSOR,
    OP_RENTAL_LINES_DTLS OUT ORDER_LIST_CURSOR,
    OP_OTHER_ITEMS_DTLS OUT ORDER_LIST_CURSOR,
    OP_STATUS_CODE OUT VARCHAR2,
    OP_STATUS_MSG OUT VARCHAR2 )
IS
BEGIN
  SELECT CUSTOMER.AGREEMENT ,
    NVL(sysdate + CUSTOMER.CONTRACTEXPIREDATE,sysdate) ,
    ORDERHEADER.SALESREP,CUSTOMER.name
  INTO OP_CUST_AGREEMENT ,
    OP_RENTAL_AGREEMENT_END_DATE ,
    OP_SALES_REP,
    OP_CUST_NAME
  FROM CUSTOMER,
    ORDERHEADER
  WHERE CUSTOMER.id=ORDERHEADER.CUSTOMERID
  AND ORDERNUMBER  =IP_ORDER_NUMBER;
  BEGIN
    OPEN OP_ORDER_SHIP_TO_DTLS FOR SELECT ADDR.LINE1
  AS
    "ADDRESS_LINE1",
    ADDR.LINE2
  AS
    "ADDRESS_LINE2",
    ADDR.CITY
  AS
    "CITY",
    ADDR.STATE
  AS
    "STATE",
    ADDR.ZIP
  AS
    "ZIP",
    ADDR.COUNTRY
  AS
    "COUNTRY",
    ADDR.USAGE
  AS
    "USAGE_TYPE" FROM ORDERHEADER OH,
    ADDRESS ADDR WHERE OH.ORDERNUMBER=IP_ORDER_NUMBER AND OH.SHIPTOADDRESSID=ADDR.id AND UPPER(USAGE)='SHIPTO';
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF SHIP TO ADDRESS:'||SQLERRM;
  END;
BEGIN
  OPEN OP_ORDER_BILL_TO_DTLS FOR SELECT ADDR.LINE1
AS
  "ADDRESS_LINE1",
  ADDR.LINE2
AS
  "ADDRESS_LINE2",
  ADDR.CITY
AS
  "CITY",
  ADDR.STATE
AS
  "STATE",
  ADDR.ZIP
AS
  "ZIP",
  ADDR.COUNTRY
AS
  "COUNTRY",
  ADDR.USAGE
AS
  "USAGE_TYPE" FROM ORDERHEADER OH,
  ADDRESS ADDR WHERE OH.ORDERNUMBER=IP_ORDER_NUMBER AND OH.BILLTOADDRESSID=ADDR.id AND UPPER(USAGE)='BILLTO';
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='002';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF BILL TO ADDRESS:'||SQLERRM;
END;
BEGIN
  OPEN OP_RENTAL_LINES_DTLS FOR SELECT ol.id
AS
  "Line_ID",
  item.id
AS
  "Item_ID",
  item.sku,
  oh.id as "Order_Header_ID",
  oh.ordernumber as "order_number",
  item.description,
  inv_org.name
AS
  "Org_Name",
  ol.quantity,
  ol.needbydate       +sysdate need_by_date,
  OL.ESTIMATEDSHIPDATE+sysdate
AS
  estimate_ship_date,
  ol.freight FROM orderlines ol,
  items item,
  INVENTORY inv,
  inventoryorg inv_org,
  orderheader oh WHERE 1 =1 AND item.id = ol.itemsid AND INV.ITEMID = ol.itemsid AND INV.INVENTORYORGID = inv_org.id AND OL.INVENTORYORGID = inv_org.id 
  AND oh.id = OL.ORDERHEADERID 
  AND OH.ORDERNUMBER=IP_ORDER_NUMBER
  and item.rental = 'Y';
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='002';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF RENTL LINES DETAILS:'||SQLERRM;
END;
BEGIN
  OPEN OP_OTHER_ITEMS_DTLS FOR SELECT ol.id
AS
  "Line_ID",
  item.id
AS
  "Item_ID",
  ol.orderheaderid
AS
  "Order_Header_ID",
  item.sku,
  ol.quantity,
  oh.id,
  ol.needbydate+sysdate need_by_date FROM orderlines ol,
  items item,
  INVENTORY inv,
  inventoryorg inv_org,
  orderheader oh WHERE 1 =1 AND item.id = ol.itemsid AND INV.ITEMID = ol.itemsid AND INV.INVENTORYORGID = inv_org.id AND OL.INVENTORYORGID = inv_org.id 
  AND oh.id = OL.ORDERHEADERID
  and item.rental = 'N'
  AND OH.ORDERNUMBER=IP_ORDER_NUMBER;
  --    and OH.ID <> IP_ORDER_LINE_ID;
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='002';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF OTHER ITEM DETAILS:'||SQLERRM;
END;
IF OP_STATUS_CODE IS NULL THEN
  OP_STATUS_CODE  :='000';
  OP_STATUS_MSG   := 'SUCCESS';
END IF;
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='001';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL FROM PROCEDURE:'||SQLERRM;
END GET_ORDER_DTLS;
PROCEDURE GET_WAREHOUSE_DTLS(
    OP_WAREHOUSE_DTLS OUT WAREHOUSE_LIST_CURSOR,
    OP_STATUS_CODE OUT VARCHAR2,
    OP_STATUS_MSG OUT VARCHAR2 )
IS
BEGIN
  BEGIN
    OPEN OP_WAREHOUSE_DTLS FOR SELECT id
  AS
    "inventory_id",
    name
  AS
    "warehouse_name" FROM INVENTORYORG;
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF WAREHOUSE DETAILS:'||SQLERRM;
  END;
  IF OP_STATUS_CODE IS NULL THEN
    OP_STATUS_CODE  :='000';
    OP_STATUS_MSG   := 'SUCCESS';
  END IF;
END GET_WAREHOUSE_DTLS;
------------------------------------------------------------
PROCEDURE GET_ITEM_DTLS(
    --IP_ORDER_LINE_ID IN OUT NUMBER,
    IP_WAREHOUSE_ID  IN NUMBER,
    OP_ITEM_DTLS OUT ITEM_LIST_CURSOR,
    OP_STATUS_CODE OUT VARCHAR2,
    OP_STATUS_MSG OUT VARCHAR2 )
IS
BEGIN
  BEGIN
    OPEN OP_ITEM_DTLS FOR SELECT originalitemid
  AS
    "LINE_ITEM_ID",
    replacementitemid
  AS
    "REPLACEMENT_ITEM_ID",
    item.SKU,
    item.DESCRIPTION
  AS
    "PART_DESCRIPTON",
    INV.QTY FROM itemreplace ir,
    inventory inv,
    items item WHERE ir.replacementitemid = INV.ITEMID AND item.id = inv.id AND inv.id = IP_WAREHOUSE_ID;
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF CHANGE SKU:'||SQLERRM;
  END;
  IF OP_STATUS_CODE IS NULL THEN
    OP_STATUS_CODE  :='000';
    OP_STATUS_MSG   := 'SUCCESS';
  END IF;
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='001';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL FROM PROCEDURE GET_ITEM_DETAILS:'||SQLERRM;
END GET_ITEM_DTLS;
PROCEDURE CREATE_RENTAL_ORDERS(
    OP_RENTAL_LINES_LST IN ORDER_HEADER_LINE_DTLS_TAB,
    OP_ORDER_LINE_ID OUT VARCHAR2,
    OP_RESP_CODE OUT VARCHAR2,
    OP_RESP_MSG OUT VARCHAR2 )
IS
  L_ROW_COUNT       NUMBER;
  l_rental_order_id NUMBER;
  l_order_line_id   NUMBER;
  l_item_id         NUMBER;
  l_daily_rate      NUMBER;
  l_freight         NUMBER;
  l_install_base_id NUMBER;
  l_return_date     NUMBER;
BEGIN
  BEGIN
    FOR I IN OP_RENTAL_LINES_LST.FIRST .. OP_RENTAL_LINES_LST.LAST
    LOOP
      BEGIN
        SELECT COUNT(*)
        INTO L_ROW_COUNT
        FROM rentalheader
        WHERE orderid  = OP_RENTAL_LINES_LST(I).ORDER_HEADER_ID;
        IF L_ROW_COUNT = 0 THEN
          INSERT
          INTO rentalheader VALUES
            (
              rental_header_id_seq.NEXTVAL,
              OP_RENTAL_LINES_LST(I).order_header_id
            );
--          COMMIT;
        END IF;
        SELECT id
        INTO l_rental_order_id
        FROM rentalheader
        WHERE orderid = OP_RENTAL_LINES_LST(I).ORDER_HEADER_ID;
        SELECT ol.id,
          ITEMSID,
          ITEM.DAILYRATE,
          OL.FREIGHT
        INTO l_order_line_id,
          l_item_id,
          l_daily_rate,
          l_freight
        FROM orderlines ol,
          ITEMS item
        WHERE ol.id    = OP_RENTAL_LINES_LST(I).ORDER_LINE_ID
        AND OL.ITEMSID = ITEM.id ;
        SELECT NVL(MAX(installbaseid),0)+1
        INTO l_install_base_id
        FROM rentallines
        WHERE itemid = l_item_id;
        SELECT floor(TRUNC(dbms_random.value(4,25))) INTO l_return_Date FROM dual ;
        INSERT
        INTO rentallines VALUES
          (
            rental_line_id_seq.nextval,
            l_rental_order_id,
            l_item_id,
            l_install_base_id,
            1,             -- start_Date
            l_return_Date, -- end daate
            l_daily_rate,
            l_freight,
            0,
            'At Customer'
          );
        --            commit;
        DELETE
        FROM orderlines
        WHERE id = OP_RENTAL_LINES_LST(I).order_line_id;
      END;
--      COMMIT;
    END LOOP;
    COMMIT;
    OP_RESP_CODE :='000';
    OP_RESP_MSG  :='Success';
  EXCEPTION
  WHEN OTHERS THEN
    OP_RESP_CODE :='001';
    OP_RESP_MSG  :=SQLERRM;
  END;
  OP_RESP_CODE :='000';
  OP_RESP_MSG  :='Success';
EXCEPTION
WHEN OTHERS THEN
  OP_RESP_CODE :='001';
  OP_RESP_MSG  :=SQLERRM;
END CREATE_RENTAL_ORDERS;

procedure UPDATE_RENTAL_ORDER_LINES(
        IP_ITEM_INFO_LST IN ITEM_INFO_DTLS_TAB,
        OP_RESP_CODE OUT varchar2,
        OP_RESP_MSG OUT varchar2
      )
      
is
l_estimate_ship_date number;
BEGIN
  BEGIN
    FOR I IN IP_ITEM_INFO_LST.FIRST .. IP_ITEM_INFO_LST.LAST
    LOOP
      BEGIN
      
      UPDATE ORDERLINES
      SET ITEMSID = IP_ITEM_INFO_LST(I).LINE_ITEM_ID,
      INVENTORYORGID     = IP_ITEM_INFO_LST(I).WAREHOUSE_ID,
      QUANTITY = IP_ITEM_INFO_LST(I).QTY
      WHERE id = IP_ITEM_INFO_LST(I).ORDER_LINE_ID
      and ORDERHEADERID = IP_ITEM_INFO_LST(I).ORDER_HEADER_ID;
         END;
         commit;
      BEGIN
      
      select NEEDBYDATE-INV_ORG.DAYSTOARRIVE into l_estimate_ship_date
      from ORDERLINES ol,INVENTORYORG inv_org
                where 1=1
                and OL.INVENTORYORGID = inv_org.id
                and ol.id = IP_ITEM_INFO_LST(I).ORDER_LINE_ID;
                
                 UPDATE ORDERLINES
      SET ESTIMATEDSHIPDATE = l_estimate_ship_date
      WHERE id = IP_ITEM_INFO_LST(I).ORDER_LINE_ID;
      commit;
      END;
    END LOOP;
     OP_RESP_CODE :='000';
        OP_RESP_MSG  :='Success';
  EXCEPTION
  WHEN OTHERS THEN
    OP_RESP_CODE :='001';
    OP_RESP_MSG  :='Error in Updating RENTALLINES'||SQLERRM;
  END;
  OP_RESP_CODE :='000';
  OP_RESP_MSG  :='Success';
EXCEPTION
WHEN OTHERS THEN
  OP_RESP_CODE :='001';
    OP_RESP_MSG  :='Error in Procedure UPDATE_RENTAL_LINES'||SQLERRM;
END UPDATE_RENTAL_ORDER_LINES;


PROCEDURE REPLACE_RENTAL_ORDER_ITEM(
    IP_RENTAL_LINES_LST IN RENTAL_LINES_DTLS_OBJECT,
    OP_ORDER_LINE_ID OUT VARCHAR2,
    OP_STATUS_CODE OUT VARCHAR2,
    OP_STATUS_MSG OUT VARCHAR2 )
IS
BEGIN
  OP_STATUS_MSG := '';
  INSERT
  INTO ORDERLINES VALUES
    (
      order_lines_seq.NEXTVAL,
      IP_RENTAL_LINES_LST.ORDER_HEADER_ID,
      IP_RENTAL_LINES_LST.ITEM_ID,
      '0',
      '0',
      '1',
      '4',
      '0'
    );
  UPDATE RENTALLINES
  SET STATUS     ='REPLACE SUBMITTED'
  WHERE id       =IP_RENTAL_LINES_LST.RENTAL_LINE_ID;
  OP_STATUS_CODE:='000';
  OP_STATUS_MSG := 'SUCCESS';
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='001';
  OP_STATUS_MSG :='ERROR OCCURED DURING REPLACE_RENTAL_ORDER_ITEMS:'||SQLERRM;
END REPLACE_RENTAL_ORDER_ITEM;
PROCEDURE REPLACE_RENTAL_ORDER_ITEMS(
    IP_RENTAL_LINES_LST IN RENTAL_LINES_DTLS_TAB,
    OP_ORDER_LINE_ID OUT VARCHAR2,
    OP_STATUS_CODE OUT VARCHAR2,
    OP_STATUS_MSG OUT VARCHAR2 )
IS
  L_RANDOM_FREIGHT VARCHAR2(10) := '0';
BEGIN
  FOR I IN IP_RENTAL_LINES_LST.FIRST .. IP_RENTAL_LINES_LST.LAST
  LOOP
    SELECT floor(TRUNC(DBMS_RANDOM.value(400,2500))) into L_RANDOM_FREIGHT FROM dual;
    INSERT
    INTO ORDERLINES VALUES
      (
        order_lines_seq.NEXTVAL,
        IP_RENTAL_LINES_LST(I).ORDER_HEADER_ID,
        IP_RENTAL_LINES_LST(I).ITEM_ID,
        '0',
        '0',
        '1',
        '4',
        L_RANDOM_FREIGHT
      );
    UPDATE RENTALLINES
    SET STATUS='REPLACE SUBMITTED'
    WHERE id  =IP_RENTAL_LINES_LST(I).RENTAL_LINE_ID;
  END LOOP;
  OP_STATUS_CODE:='000';
  OP_STATUS_MSG := 'SUCCESS';
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='001';
  OP_STATUS_MSG :='ERROR OCCURED DURING REPLACE_RENTAL_ORDER_ITEMS:'||SQLERRM;
END REPLACE_RENTAL_ORDER_ITEMS;


PROCEDURE GET_RETURN_DETAILS_DTLS(
    IP_ORDER_NUMBER IN VARCHAR2,
    OP_SALES_REP OUT VARCHAR2,
    OP_OUTSTANDING_DTLS OUT RENTAL_DETAILS_CUR,
    OP_SHIP_TO_DTLS OUT ADDRESS_CUR,
    OP_BILL_TO_DTLS OUT ADDRESS_CUR,
    OP_CUSTOMER_DTLS OUT CUSTOMER_CUR,
    OP_RENTAL_DTLS OUT RENTAL_DETAILS_CUR,
    OP_STATUS_CODE OUT VARCHAR2,
    OP_STATUS_MSG OUT VARCHAR2 )
IS
BEGIN
  SELECT OH.SALESREP
  INTO OP_SALES_REP
  FROM ORDERHEADER OH
  WHERE OH.ORDERNUMBER = IP_ORDER_NUMBER;
  BEGIN
    OPEN OP_SHIP_TO_DTLS FOR SELECT ADDR.LINE1
  AS
    "ADDRESS_LINE1",
    ADDR.LINE2
  AS
    "ADDRESS_LINE2",
    ADDR.CITY
  AS
    "CITY",
    ADDR.STATE
  AS
    "STATE",
    ADDR.ZIP
  AS
    "ZIP",
    ADDR.COUNTRY
  AS
    "COUNTRY",
    ADDR.USAGE
  AS
    "USAGE_TYPE" from ORDERHEADER OH,
    ADDRESS ADDR WHERE 1=1 AND ADDR.ID = OH.SHIPTOADDRESSID AND ADDR.CUSTOMERID = OH.CUSTOMERID AND UPPER(ADDR.USAGE) = 'SHIPTO' AND OH.ORDERNUMBER = IP_ORDER_NUMBER;
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF SHIPPING DETAILS:'||SQLERRM;
  END;
  BEGIN
    open OP_OUTSTANDING_DTLS for
    select rh.orderid as "ORDER_HEADER_ID",oh.ordernumber "ORDER_NUMBER",rl.RENTALHEADERID "RENTAL_HEADER_ID",rl.id as "RL_LINE_ID",rl.itemid as "RL_ITEM_ID",ib.id as "INSTALL_BASE_ID",item.sku AS "ITEM_SKU",IB.SERIALNUMBER as "SERIAL_NUMBER",sysdate+nvl(rl.startdate,0) as "SHIP_DATE"
  from rentallines rl, installbase ib,items item,rentalheader rh,orderheader oh
  where rl.status = 'At Customer'
  and rl.installbaseid = ib.id
  and item.id = rl.itemid
  and rh.id = RL.RENTALHEADERID
  and item.Rental = 'Y'
  and oh.id = rh.orderid
     AND OH.ORDERNUMBER = IP_ORDER_NUMBER;
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF OUTSTANDING ITEM DETAILS:'||SQLERRM;
  END;
  
   BEGIN
    OPEN OP_BILL_TO_DTLS FOR SELECT ADDR.LINE1
  AS
    "ADDRESS_LINE1",
    ADDR.LINE2
  AS
    "ADDRESS_LINE2",
    ADDR.CITY
  AS
    "CITY",
    ADDR.STATE
  AS
    "STATE",
    ADDR.ZIP
  AS
    "ZIP",
    ADDR.COUNTRY
  AS
    "COUNTRY",
    ADDR.USAGE
  AS
    "USAGE_TYPE" 
    from ORDERHEADER OH,
    ADDRESS ADDR 
    WHERE 1=1 AND ADDR.ID = OH.BILLTOADDRESSID AND ADDR.CUSTOMERID = OH.CUSTOMERID AND UPPER(ADDR.USAGE) = 'BILLTO' AND OH.ORDERNUMBER = IP_ORDER_NUMBER;
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF SHIPPING DETAILS:'||SQLERRM;
  END;
  
  
  BEGIN
    OPEN OP_BILL_TO_DTLS FOR SELECT ADDR.LINE1
  AS
    "ADDRESS_LINE1",
    ADDR.LINE2
  AS
    "ADDRESS_LINE2",
    ADDR.CITY
  AS
    "CITY",
    ADDR.STATE
  AS
    "STATE",
    ADDR.ZIP
  AS
    "ZIP",
    ADDR.COUNTRY
  AS
    "COUNTRY",
    ADDR.USAGE
  AS
    "USAGE_TYPE" 
    from ORDERHEADER OH,
    ADDRESS ADDR 
    WHERE 1=1 AND ADDR.ID = OH.BILLTOADDRESSID AND ADDR.CUSTOMERID = OH.CUSTOMERID AND UPPER(ADDR.USAGE) = 'BILLTO' AND OH.ORDERNUMBER = IP_ORDER_NUMBER;
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF SHIPPING DETAILS:'||SQLERRM;
  END;
  begin
    OPEN OP_CUSTOMER_DTLS FOR SELECT CUST.NAME as "CUST_NAME",
    CUST.AGREEMENT AS "CUST_AGGR",
    sysdate+CUST.CONTRACTEXPIREDATE AS "CUST_EXPIRE_DATE" FROM CUSTOMER CUST,
    ORDERHEADER OH WHERE 1=1 AND CUST.ID = OH.CUSTOMERID AND OH.ORDERNUMBER = IP_ORDER_NUMBER;
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE:='002';
    OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF CUSTOMER DETAILS:'||SQLERRM;
  END;
  BEGIN
    OPEN OP_RENTAL_DTLS FOR 
    SELECT SYSDATE+RL.STARTDATE as "START_DATE",
    OH.ID as "ORDER_HEADER_ID",
    OH.ORDERNUMBER AS "ORDER_NUMBER",
    RH.ID as "RENTAL_HEADER_ID",
    RL.STATUS as "STATUS",
    ITEM.SKU,
    RL.ITEMID as "RENTAL_ITEM_ID",
    RL.INSTALLBASEID as "RENTAL_IB_ID",
    RL.id As "RENTAL_LINE_ID",
    sysdate+RL.RETURNDATE as "RETURN_DATE",
    RL.DAILYRATE as "DAILY_RATE",
    (sysdate     +RL.RETURNDATE)-(sysdate+RL.STARTDATE) as "NO_OF_DAYS",
    RL.DAILYRATE * ((sysdate+RL.RETURNDATE)-(sysdate+RL.STARTDATE)) as "RENTAL",
    RL.UNBILLEDFREIGHT as "UNBILLED_FREIGHT",
    RL.DAMAGE as "DAMAGE",
    (RL.DAILYRATE * ((SYSDATE+RL.RETURNDATE)-(SYSDATE+RL.STARTDATE)))+(RL.UNBILLEDFREIGHT)+(RL.DAMAGE) AS "TOTAL"
    FROM RENTALLINES RL,
    RENTALHEADER RH,
    ORDERHEADER OH , ITEMS ITEM
    WHERE 1 =1 
    AND OH.ID = RH.ORDERID AND 
    RH.ID = RL.RENTALHEADERID
    and ITEM.id = RL.ITEMID
    and RL.STATUS in ('Ready to Close','Damage','Inspection');
  EXCEPTION
  WHEN OTHERS THEN
    OP_STATUS_CODE :='002';
    OP_STATUS_MSG  := 'ERROR OCCURED DURING RETRIEVAL OF RENTAL DETAILS:'||SQLERRM;
  END;
  IF OP_STATUS_CODE IS NULL THEN
    OP_STATUS_CODE  :='000';
    OP_STATUS_MSG   := 'SUCCESS';
  END IF;
EXCEPTION
WHEN OTHERS THEN
  OP_STATUS_CODE:='001';
  OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL FROM PROCEDURE:'||SQLERRM;
END GET_RETURN_DETAILS_DTLS;

PROCEDURE GET_RENTAL_LINE_DTLS(
         IP_RENTAL_LINE_ID IN  OUT  number,
        RLINE_INFO_DTLS OUT RLINE_INFO_LIST_CURSOR,
        OP_STATUS_CODE OUT VARCHAR2,
        OP_STATUS_MSG OUT VARCHAR2
      )
IS
begin
begin
OPEN RLINE_INFO_DTLS FOR 
SELECT
  id                 AS "RENTAL_LINE_ID",
  sysdate+startdate  AS "RENTAL_START_DATE",
  sysdate+returndate AS "RENTAL_RETURN_DATE",
  dailyrate,
  damage
FROM
  rentallines
  where id = IP_RENTAL_LINE_ID;
EXCEPTION
when OTHERS then
OP_STATUS_CODE:='002';
OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL OF RLINE_INFO_LIST_CURSOR:'||SQLERRM;
end;
if OP_STATUS_CODE is null then
OP_STATUS_CODE :='000';
OP_STATUS_MSG := 'SUCCESS';
END IF;
EXCEPTION
when OTHERS then
OP_STATUS_CODE:='001';
OP_STATUS_MSG := 'ERROR OCCURED DURING RETRIEVAL FROM PROCEDURE GET_RENTAL_LINE_DTLS:'||SQLERRM;
end GET_RENTAL_LINE_DTLS;

procedure UPDATE_RENTAL_LINES(
        IP_RENTAL_LINES_LST IN RENTAL_LINE_DTLS_TAB,
        IP_RENTAL_LINE_ID OUT varchar2,
        OP_RESP_CODE OUT varchar2,
        OP_RESP_MSG OUT varchar2
      )
      
is

BEGIN
  BEGIN
    FOR I IN IP_RENTAL_LINES_LST.FIRST .. IP_RENTAL_LINES_LST.LAST
    LOOP
      BEGIN
      
      UPDATE RENTALLINES
      SET startdate = IP_RENTAL_LINES_LST(I).rental_start_Date,
      returndate     =IP_RENTAL_LINES_LST(I).rental_return_Date,
      UNBILLEDFREIGHT = IP_RENTAL_LINES_LST(I).rental_unbillied_FREIGHT,
      damage = IP_RENTAL_LINES_LST(I).rental_damage,
      status = IP_RENTAL_LINES_LST(I).rental_status
      WHERE id = IP_RENTAL_LINES_LST(I).RENTAL_LINE_ID;
         END;
         commit;
    END LOOP;
     OP_RESP_CODE :='000';
        OP_RESP_MSG  :='Success';
  EXCEPTION
  WHEN OTHERS THEN
    OP_RESP_CODE :='001';
    OP_RESP_MSG  :='Error in Updating RENTALLINES'||SQLERRM;
  END;
  OP_RESP_CODE :='000';
  OP_RESP_MSG  :='Success';
EXCEPTION
WHEN OTHERS THEN
  OP_RESP_CODE :='001';
    OP_RESP_MSG  :='Error in Procedure UPDATE_RENTAL_LINES'||SQLERRM;
END UPDATE_RENTAL_LINES;


procedure BILL_RENTAL_LINES(
        IP_RENTAL_LINE_ID IN varchar2,
        OP_RESP_CODE OUT varchar2,
        OP_RESP_MSG OUT varchar2
      )
is

  BEGIN      
      UPDATE RENTALLINES
      SET status = 'Billed'
      WHERE id = IP_RENTAL_LINE_ID;
         commit;
     OP_RESP_CODE :='000';
        OP_RESP_MSG  :='Success';
EXCEPTION
WHEN OTHERS THEN
  OP_RESP_CODE :='001';
    OP_RESP_MSG  :='Error in Procedure BILL_RENTAL_LINES'||SQLERRM;
END BILL_RENTAL_LINES;

END APPS_RENTAL_TOOL_PKG;
/
